apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion project.ext.sharedCompileSdkVersion
    buildToolsVersion project.ext.sharedBuildToolsVersion

    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding.enabled = true

    defaultConfig {
        applicationId "graeme.hosford.eventmanager"

        minSdkVersion project.ext.sharedMinSdkVersion
        targetSdkVersion project.ext.sharedTargetSdkVersion
        versionCode project.ext.appVersionCode
        versionName project.ext.appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            multiDexEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"

    // third party dependencies
    api "androidx.annotation:annotation:${versions.androidx.annotation}"
    api "androidx.appcompat:appcompat:${versions.androidx.appCompat}"
    api "com.google.android.material:material:${versions.androidx.material}"

    implementation "androidx.constraintlayout:constraintlayout:${versions.androidx.constraintLayout}"
    implementation "androidx.legacy:legacy-support-v4:${versions.androidx.legacySupportV4}"
    implementation "androidx.navigation:navigation-fragment:${versions.androidx.navigation}"
    implementation "androidx.navigation:navigation-ui:${versions.androidx.navigation}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.androidx.lifecycleExtensions}"
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.androidx.navigation}"
    implementation "androidx.navigation:navigation-ui-ktx:${versions.androidx.navigation}"

    // Dagger for Dependency Injection
    implementation "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    // ButterKnife dependencies
    implementation "com.jakewharton:butterknife:${versions.butterknife}"
    kapt "com.jakewharton:butterknife-compiler:${versions.butterknife}"

    // Firebase dependencies
    implementation "com.firebaseui:firebase-ui-auth:${versions.firebase.authui}"
    implementation "com.google.firebase:firebase-messaging:${versions.firebase.fcm}"
    implementation "com.google.firebase:firebase-firestore:${versions.firebase.firestore}"
    implementation "com.google.firebase:firebase-storage:${versions.firebase.storage}"

    // Retrofit Dependencies
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofitMoshiConverter}"

    // Moshi Dependencies
    implementation "com.squareup.moshi:moshi:${versions.moshi}"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"

    // RxJava Dependencies
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rxandroid}"
    implementation "io.reactivex.rxjava2:rxjava:${versions.rxjava}"

    // unit test dependencies
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "io.mockk:mockk:${versions.mockK}"

    // android instrumentation test dependencies
    androidTestImplementation "androidx.annotation:annotation:${versions.androidx.annotation}"
    androidTestImplementation "androidx.test:runner:${versions.androidx.test}"
    androidTestImplementation "androidx.test:rules:${versions.androidx.test}"
    androidTestImplementation "androidx.test.ext:junit:${versions.androidx.testExt}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.androidx.espressoCore}"
    androidTestImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "org.mockito:mockito-android:${versions.mockito}"

}
